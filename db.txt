create table predavac(
	id serial primary key,
	email varchar(50) not null unique,
	password varchar(20) not null,
	first_name varchar(20),
	last_name varchar(20)
);

create table predmeti(
	id serial primary key,
	ime varchar(30) not null unique
);

create table predavanja(
	id serial primary key,
	naziv_predavanja varchar(30) not null,
	redni_broj int not null
);

create table anketa(
	id serial primary key,
	naziv varchar(20) not null unique
);

create table pitanje(
	id serial primary key,
	tekst varchar(100) not null
);


alter table predmeti add column predavac_id int;
alter table predmeti add constraint fk_predavac_id foreign key (predavac_id) references predavac(id) on delete cascade;

alter table predavanja add column predmet_id int;
alter table predavanja add constraint fr_predmet_id foreign key (predmet_id) references predmeti(id) on delete cascade;

alter table predavac alter column password type varchar(100);


select * from predmeti;

select * from predavac;

drop function getSubjectForProfesorWithId(id_prof int)

create or replace function getSubjectForProfesorWithId(in id_prof int) returns table (id int,ime varchar)
as $$
begin
	return query select pr.id, pr.ime from predavac p left join predmeti pr on p.id=id_prof; 
end; $$
language plpgsql;

select * from getSubjectForProfesorWithId(1);

CREATE TABLE pitanja_za_profesora (
  id serial primary key,
  pitanje_tekst varchar(255),
  broj_odobrenja int,
  broj_odbijenica int,
  odgovoreno boolean default false,
  predavanje_id int,
  foreign key (predavanje_id) references predavanja(id)
);

alter table pitanja_za_profesora
add constraint unique_pitanje_tekst
unique (pitanje_tekst)

alter table anketa add column code varchar(6);

alter table predavanja add column status boolean default false;

create or replace function checkLectureStatus(in idPredavanja int)
returns boolean as $$
declare
	stat boolean;
begin
	select status into stat from predavanja where id = idPredavanja;
	return stat;
end $$
language plpgsql;


create table student (
	id serial primary key,
	name varchar(20),
	email varchar(50) not null unique
);

alter table anketa add column predavanje_id int;
alter table anketa add constraint predavanje_id_fk foreign key (predavanje_id) references predavanja(id);

alter table pitanje add column anketa_id int;
alter table pitanje add constraint anketa_id_fk foreign key (anketa_id) references anketa(id);

create table podudjeni_odgovor (
	id serial primary key,
	tekst_odgovora varchar(255),
	pitanje_id int,
	foreign key (pitanje_id) references pitanje(id)
);

create table odgovor (
	id serial primary key,
	odgovora varchar(255),
	pitanje_id int,
	student_id int,
	foreign key (pitanje_id) references pitanje(id),
	foreign key (student_id) references student(id)
);

alter table anketa add constraint unique_anketa_code unique (code);

alter table odgovor add column rjesenje boolean;